# Establece la imagen base
FROM node:14-alpine

# Crea una carpeta con el parámetro -p, sin error si existe, crea directorios padre según sea necesario, 
# con sus modos de archivo no afectados por ninguna opción -m.  Luego le cambia la propiedad a todos los
# archivos de la carpeta /app asignandosela a node.
RUN mkdir -p /home/node/app/node_modules && chown -R node:node /home/node/app
RUN ip addr
RUN ping -c 4 192.168.81.20

# Declara parámetros de la línea de comandos para el proceso de construcción
ARG API_ABSOLUTE
ARG FRONTEND_URL
ARG NODE_ENV
ARG VUE_APP_LANDING
ARG VUE_APP_URL

# Establece variables de entorno
RUN export API_ABSOLUTE=http://hablaqui-staging.us-east-1.elasticbeanstalk.com
RUN export FRONTEND_URL=http://hablaquistaginglanding-env.eba-xt3vgmpt.us-east-2.elasticbeanstalk.com/
RUN export VUE_APP_LANDING=http://hablaquistaginglanding-env.eba-xt3vgmpt.us-east-2.elasticbeanstalk.com/
RUN export VUE_APP_URL=http://hablaquistagingapi-env.eba-9ipn8u5m.us-east-2.elasticbeanstalk.com/api/v1
RUN export NODE_ENV=production
# 	Cambiar de directorio actual a /home/node/app
WORKDIR /home/node/app

# Cambia el usuario actual a node
USER node

# Copia todos los archivos de la carpeta actual a la carpeta /home/node/app
COPY --chown=node:node package*.json ./
COPY --chown=node:node . ./
COPY Dockerrun.aws.json ./

# Instala las dependencias del proyecto
RUN npm install

# Variables de entorno para que funcione Nuxt
ENV HOST=0.0.0.0
ENV PORT=8080
ENV API_ABSOLUTE=http://192.168.81.20:3000
ENV VUE_APP_URL=http://192.168.81.20:3000/api/v1
ENV NODE_ENV=production

# Crea el archivo .env con las variables de entorno y genera el proyecto
RUN npm run create-env
RUN npm run generate

# Se expone el puerto 9000 y 8080
EXPOSE 9000 8080

# Ejecuta el comando npm run start
ENTRYPOINT ["npm", "run", "start"]